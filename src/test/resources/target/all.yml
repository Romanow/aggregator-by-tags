openapi: 3.0.1
info:
  title: Application
  version: 1.0.0
servers:
  - url: http://localhost:8080
security: []
paths:
  /store/api/public/v1/orders:
    get:
      tags:
        - public
      summary: Получить список заказов пользователя
      operationId: orders
      responses:
        "200":
          description: Список заказов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
  /store/api/public/v1/orders/{orderUid}:
    get:
      tags:
        - public
      summary: Получить подробную информацию о заказе
      operationId: orderByUid
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Подробная информация о заказе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedOrderResponse'
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
  /store/api/public/v1/orders/{orderUid}/cancel:
    delete:
      tags:
        - public
      summary: Отменить заказ
      operationId: cancel
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "202":
          description: Заказ отменен
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
  /store/api/public/v1/orders/{orderUid}/warranty:
    post:
      tags:
        - public
      summary: Запросить гарантию по заказу
      operationId: warranty
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Информация о статусе гарантии
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarrantyResponse'
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
  /store/api/public/v1/orders/purchase:
    post:
      tags:
        - public
      summary: Выполнить заказ
      operationId: purchase
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "201":
          description: Заказ создан
          headers:
            Location:
              description: Ссылка на созданный заказ
              style: simple
              schema:
                type: string
        "400":
          description: Ошибка входных данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Товар недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
      x-handler-args:
        - field: authenticationToken
          type: org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken
          optional: true
  /warehouse/api/public/v1/items:
    get:
      tags:
        - public
      summary: Получить все доступные товары
      operationId: availableItems
      responses:
        "200":
          description: Информация о доступных товарах
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemInfo'
  /warehouse/api/private/v1/items:
    get:
      tags:
        - private
      summary: Получить информацию о товарах
      operationId: items
      parameters:
        - name: names
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Информация о товарах
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemInfo'
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Товарны не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
  /warehouse/api/private/v1/items/take:
    post:
      tags:
        - private
      summary: Забрать товары со склада
      operationId: take
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "202":
          description: Товары забронированы
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Товарны не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Недостаточное количество товаров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
  /warehouse/api/private/v1/items/refund:
    delete:
      tags:
        - private
      summary: Вернуть товары на склад
      operationId: refund
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "202":
          description: Товары успешно возвращены
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Товарны не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
  /warranty/api/private/v1/warranty/{orderUid}:
    get:
      tags:
        - private
      summary: Получить статус гарантии
      operationId: status
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Информация о гарантии
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarrantyStatusResponse'
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
  /warranty/api/private/v1/warranty/{orderUid}/start:
    post:
      tags:
        - private
      summary: Поставить заказ на гарантию
      operationId: start
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "202":
          description: Заказ поставлен на гарантию
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
  /warranty/api/private/v1/warranty/{orderUid}/request:
    post:
      tags:
        - private
      summary: Запрос гарантии
      operationId: warrantyRequest
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Заказ поставлен на гарантию
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarrantyResponse'
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Товар не на гарантии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
  /warranty/api/private/v1/warranty/{orderUid}/stop:
    delete:
      tags:
        - private
      summary: Снять заказ с гарантии
      operationId: stop
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "202":
          description: Заказ снять с гарантии
        "401":
          description: Пользователь не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Гарантия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - TokenBasedAuth: []
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          nullable: true
      additionalProperties: false
    OrderResponse:
      type: object
      properties:
        orderUid:
          type: string
          format: uuid
        userId:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        orderDate:
          type: string
          format: date-time
        items:
          type: array
          items:
            type: string
      additionalProperties: false
      example:
        orderUid: d3795a76-d514-4db7-90d1-173e7e49aedb
        userId: romanow
        status: NEW
        orderDate: 2025-05-05T10:00:00Z
        items:
          - Lego 8880
    DetailedOrderResponse:
      type: object
      additionalProperties: false
      example:
        orderUid: d3795a76-d514-4db7-90d1-173e7e49aedb
        userId: romanow
        status: NEW
        orderDate: 2025-05-05T10:00:00Z
        items:
          - name: Lego 8880
            description: Lego Technic Supercar 8880
            manufacturer: Lego
            imageUrl: https://main-cdn.sbermegamarket.ru/big2/lego-8880.jpg
            warranty:
              name: Lego 8880
              status: ON_WARRANTY
              comment: ""
              warrantyStartDate: 2025-05-05T10:00:00Z
              lastUpdateDate: 2025-05-05T10:00:00Z
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ItemInfo'
    WarrantyResponse:
      type: object
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/WarrantyStatus'
        comment:
          type: string
          nullable: true
      additionalProperties: false
      example:
        name: Lego 8880
        status: TAKE_NEW
        comment: ""
    OrderStatus:
      type: string
      additionalProperties: false
      enum:
        - NEW
        - PROCESSED
        - DENIED
        - CANCELED
    WarrantyStatus:
      type: string
      additionalProperties: false
      enum:
        - ON_WARRANTY
        - TAKE_NEW
        - REPAIR
        - REMOVED_FROM_WARRANTY
    ItemInfo:
      type: object
      properties:
        name:
          type: string
        count:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        manufacturer:
          type: string
          nullable: true
        imageUrl:
          type: string
          format: url
          nullable: true
      additionalProperties: false
      example:
        name: Lego 8880
        count: 1
        description: Lego Technic Supercar 8880
        manufacturer: Lego
        imageUrl: https://main-cdn.sbermegamarket.ru/big2/lego-8880.jpg
    WarrantyStatusResponse:
      type: object
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/WarrantyStatus'
        comment:
          type: string
          nullable: true
        warrantyStartDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
      additionalProperties: false
      example:
        name: Lego 8880
        status: ON_WARRANTY
        comment: ""
        warrantyStartDate: 2025-05-05T10:00:00Z
        lastUpdateDate: 2025-05-05T10:00:00Z
  securitySchemes:
    TokenBasedAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
